name: .NET Core
env:
  ACRREGISTRY: openhackn82382w0acr.azurecr.io
  APPNAME:  openhackn82382w0poi
  RGNAME: openhackn82382w0rg
  COVERALLS_REPO_TOKEN: ${{ secrets.COVERALL }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  pull_request:
    paths: 
      - 'apis/poi/**'
    branches: [ master ]

jobs:
  build:
    name: "build net"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Install dependencies
      run: dotnet restore
      working-directory: apis/poi
      
    - name: Test
      run: | 
        echo ${{ github.workspace }}
        echo 'start test'	
        dotnet build 
        dotnet test --no-restore --verbosity normal /p:CollectCoverage=true  /p:CoverletOutput=lcov/ /p:CoverletOutputFormat=lcov
        dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
        cat coverage.opencover.xml
      working-directory: apis/poi/tests/UnitTests
      
    - name: Build
      run: |
        dotnet tool install --global dotnet-sonarscanner --version 4.8.0
        cat tests/UnitTests/coverage.opencover.xml
        dotnet sonarscanner begin /k:nettest /o:ahmstestorg /d:sonar.login=${{ secrets.SONARKEY }} /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths=tests/UnitTests/coverage.opencover.xml
        dotnet build --configuration Release --no-restore 
        dotnet sonarscanner end  /d:sonar.login=${{ secrets.SONARKEY }}
      working-directory: apis/poi
      

    
    - name: Coveralls GitHub Action
      uses: coverallsapp/github-action@v1.1.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
    # Path to lcov file
        path-to-lcov: apis/poi/tests/UnitTests/lcov/coverage.info
   # The root folder of the project that originally ran the tests

  #  - name: SonarCloud Scan
  #    uses: sonarsource/sonarcloud-github-action@master
  #    with:
  #     projectBaseDir: apis/poi
  #    env:
  #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });
    

        
  