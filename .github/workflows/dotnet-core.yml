name: .NET Core
env:
  ACRREGISTRY: openhackn82382w0acr.azurecr.io
  APPNAME:  openhackn82382w0poi
on:
  push:
    paths: 
      - 'apis/poi/**'
    branches: [ master ]
  pull_request:
    paths: 
      - 'apis/poi/**'
    branches: [ master ]

jobs:
  build:
    name: "build net"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Install dependencies
      run: dotnet restore
      working-directory: apis/poi
    - name: Build
      run: dotnet build --configuration Release --no-restore
      working-directory: apis/poi
    - name: Test
      run: dotnet test --no-restore --verbosity normal
      working-directory: apis/poi/tests/UnitTests
    - name: Create Issue Action
      if: failure()
      uses: nashmaniac/create-issue-action@v1.1
      with:
    # Title of the issue
        title: Issue with build 
    # Token of the user that creates the issue
        token: ${{secrets.GITHUB_TOKEN}}
        body: Workflow failed for commit ${{github.sha}}
        
  release:
    runs-on: ubuntu-latest
    if:  github.ref == 'refs/heads/master' && github.event_name == 'push' 
    needs: [build]
    name: "deploy to docker registry"
    steps:
    # checkout the repo
    - name: 'Checkout Github Action' 
      uses: actions/checkout@master
      
    - name: Hello world
      run: echo Hello world {{env.ACRREGISTRY}} ${{env.APPNAME}}
    
    - uses: azure/docker-login@v1
      with:
        login-server: ${{env.ACRREGISTRY}}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
      name: "docker login"
    
    - run: |
        docker build . -t ${{ env.ACRREGISTRY}}/devopsoh/api-poi:${{ github.run_id }}
        docker push ${{ env.ACRREGISTRY}}/devopsoh/api-poi:${{ github.run_id}} 
      name: "docker build and push"
      working-directory: 'apis/poi/web'
 
  release_to_web_app:
    runs-on: ubuntu-latest
    if:  github.ref == 'refs/heads/master' && github.event_name == 'push' 
    needs: [build]
    name: "deploy Azure Web App"
    steps:
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
  
    - name: 'Run Azure webapp deploy action using publish profile credentials'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.APPNAME}}
        slot-name: staging
        images: '${{ env.ACRREGISTRY}}/devopsoh/api-poi:${{ github.run_id }}'
        
  validate_web_app:
    runs-on: ubuntu-latest
    name: "Validate All Working"
    needs: [release_to_web_app]
    steps:
      - run: | 
            wget https://raw.githubusercontent.com/ahmedsza/ohdevops/master/polling.sh
            bash polling.sh
       
      - run: echo "I have file!"
        if:  env.APISTATUS == 'true'
      
    
    
      

